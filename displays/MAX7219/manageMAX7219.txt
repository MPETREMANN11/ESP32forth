\ *********************************************************************
\ Manage MAX7219 led display
\    Filename:      manageMAX7219.txt
\    Date:          17 jun 2022
\    Updated:       19 feb 2022
\    File Version:  0.0
\    MCU:           ESP32-WROOM-32
\    Forth:         ESP32forth all versions 7.x++
\    Copyright:     Marc PETREMANN
\    Author:        Marc PETREMANN
\    GNU General Public License
\ *********************************************************************

\ require SPI vocabulary:
\ link: https://esp32.arduino-forth.com/article/SPI_implementation
\ link: https://esp32.arduino-forth.com/article/SPI_words

DEFINED? --MAX7219 [if] forget --MAX7219  [then]
create --MAX7219

\ doc: https://www.idreammicro.com/post/Controleurs-d-affichage-Maxim-MAX7219-MAX7221

\ define VSPI pins
\             ESP32             MAX7219
19 constant VSPI_MISO  \ <-->    unused
23 constant VSPI_MOSI  \ <-->    DIN
18 constant VSPI_SCLK  \ <-->    CLK
05 constant VSPI_CS    \ <-->    CS

\ define SPI port frequency
4000000 constant SPI_FREQ

\ select SPI vocabulary
only FORTH  SPI also

\ initialize SPI port
: init.VSPI ( -- )
    VSPI_CS OUTPUT pinMode
    VSPI_SCLK VSPI_MISO VSPI_MOSI VSPI_CS SPI.begin
    SPI_FREQ SPI.setFrequency
  ;

\ CS select for MAX7219
: MAX7219.select ( -- )
    VSPI_CS LOW digitalWrite
  ;

\ CS deselect for MAX7219
: MAX7219.deselect ( -- )
    VSPI_CS HIGH digitalWrite
  ;

\ send two bytes to MAX7219 thru SPI port
: MAX7219.send ( c1 c2 -- )
    MAX7219.select
    SPI.write SPI.write
    MAX7219.deselect
  ;

\ definition of MAX7219 parameters
4 value #NB_MAX7219     \ for 32 x 8 display size

\ definition of MAX7219 commands
$00 constant _NO-OP
$01 constant _DIGIT0
$02 constant _DIGIT1
$03 constant _DIGIT2
$04 constant _DIGIT3
$05 constant _DIGIT4
$06 constant _DIGIT5
$07 constant _DIGIT6
$08 constant _DIGIT7
$09 constant _DECODE-MODE   \ val: $00 for led matrix 
$0a constant _INTENSITY     \ range $00..$0f
$0b constant _SCAN-LIMIT    \ range 0..7
$0c constant _SHUTDOWN      \ range 0|1
$0f constant _DISPLAY-TEST  \ range 0|1

\ send a command an data to MAX7219
: MAX7219.send.command  { data command -- }  
    #NB_MAX7219 for
        aft  data command MAX7219.send  then
    next
  ;

: MAX7219.normal   ( -- ) 
    $01 _SHUTDOWN MAX7219.send.command
  ;

: MAX7219.shutdown ( -- ) 
    $00 _SHUTDOWN MAX7219.send.command
  ;

: MAX7219.intensity  { intens -- }  ( 0|1 -- )
    intens _INTENSITY MAX7219.send.command
  ;

: MAX7219.decode { decod -- }    ( 0 -- )  
    decod _DECODE-MODE MAX7219.send.command
  ;

: MAX7219.scan.limit { scan -- }  ( 0..7 -- )  
    scan _SCAN-LIMIT MAX7219.send.command
  ;

: MAX7219.set.digit  ( cbits cdigit -- ) 
    MAX7219.send 
  ;

: MAX7219.test  ( 0|1 -- ) 
    >r
    #NB_MAX7219 for
        aft  r@ _DISPLAY-TEST MAX7219.send  then
    next
    rdrop
  ;

: MAX7219.test.on  ( -- ) 
    $01 MAX7219.test.on
  ;

: MAX7219.test.off ( -- ) 
    $00 MAX7219.test.on
  ;


1 value intensity
7 value scanLimit
0 value decode

: MAX7219.init ( -- )
    init.VSPI
    MAX7219.normal
    intensity MAX7219.intensity
    scanLimit MAX7219.scan.limit
    decode    MAX7219.decode
  ;


\ all LEDs on full, 232mA needed
: test1 ( -- ) 
    init.VSPI
    MAX7219.test.on
    begin key? until
    MAX7219.test.off
    SPI.end
  ;

\ left 4 LEDs on first row, 42mA needed
: test2 ( -- ) 
    init.VSPI
    MAX7219.normal
    $03 MAX7219.intensity
    $00 MAX7219.scan.limit
    $f0 $01 MAX7219.set.digit
    begin key? until
    MAX7219.shutdown
    SPI.end
  ;


\ draw smiley face, 18mA needed
: test3 ( -- ) 
    init.VSPI
    MAX7219.normal
    $01 MAX7219.intensity
    $07 MAX7219.scan.limit
    $00 MAX7219.decode
    [ 2 base ! ]
    01100110 $01 MAX7219.set.digit
    01100110 $01 MAX7219.set.digit
    01100110 $01 MAX7219.set.digit
    01100110 $01 MAX7219.set.digit
    01100110 $02 MAX7219.set.digit
    01100110 $02 MAX7219.set.digit
    01100110 $02 MAX7219.set.digit
    01100110 $02 MAX7219.set.digit
\     01000010 $02 MAX7219.set.digit
\     10000010 $03 MAX7219.set.digit
\     10011000 $04 MAX7219.set.digit
\     10011000 $05 MAX7219.set.digit
\     10000010 $06 MAX7219.set.digit
\     01000010 $07 MAX7219.set.digit
\     00100000 $08 MAX7219.set.digit
    [ decimal ]
    begin key? until
    MAX7219.shutdown
    SPI.end
  ;



