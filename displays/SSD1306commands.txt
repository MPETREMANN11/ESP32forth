\ *********************************************************************
\ Manage commands for OLED SSD1306 128x32 display
\    Filename:      SSD10306commands.txt
\    Date:          09 feb 2022
\    Updated:       10 feb 2022
\    File Version:  1.0
\    MCU:           ESP32-WROOM-32
\    Forth:         ESP32forth all versions 7.x++
\    Copyright:     Marc PETREMANN
\    Author:        Marc PETREMANN
\    GNU General Public License
\ *********************************************************************

DEFINED? --SSD1306 [if] forget --SSD1306  [then]
create --SSD1306

Wire        \ activate the wire vocabulary

\ define SSD1306 128x32 ram size
128 constant DISPLAY_WIDTH
 32 constant DISPLAY_HEIGHT
DISPLAY_WIDTH DISPLAY_HEIGHT * 8 / constant SSDramSize

\  control: $00 for commands
\           $40 for datas
$00 constant CTRL_COMMANDS
$40 constant CTRL_DATAS


\ set adress of OLED SSD1306 display
$3c constant addrSSD1306

\ send a data array to SSD1306 connected via I2C bus
: toSSD1306 ( addr len -- )
    addrSSD1306 Wire.beginTransmission
    Wire.write drop
    addrSSD1306 Wire.endTransmission drop
  ;


\ define a command or data stream for SSD1306
: stream: ( comp: <name> | exec: -- addr len )
    \ set nothing as execute action by default
    \ ['] nothing is stream.action
    create
        here    \ leave current dictionnary pointer on stack
        0 c,    \ initial lenght data is 0
    does>
        dup 1+ swap c@
        toSSD1306
  ;

\ store at <WORD> addr length of datas compiled beetween
\ <WORD> and here
: ;stream ( addr-var len ---)
    dup 1+ here
    swap -      \ calculate cdata length
    \ store c in first byte of word defined by stream:
    swap c!
  ;

\ Initialize SSD105 128x32 display
stream: dispSetup
    CTRL_COMMANDS c,
    $ae c, ( DISP_SLEEP )
    $d5 c, ( SET_DISP_CLOCK )
    $80 c,
    $a8 c, ( SET_MULTIPLEX_RATIO )
    $3f c,
    $d3 c, ( SET_VERTICAL_OFFSET )
    $00 c,
    $40 c, ( SET_DISP_START_LINE )
    $8d c, ( CHARGE_PUMP_REGULATOR )
    $14 c, ( CHARGE_PUMP_ON )
    $20 c, ( MEM_ADDRESSING )
    $00 c,
    $a0 c, ( SET_SEG_REMAP_0 )
    $c0 c, ( SET_COM_SCAN_NORMAL )
    $da c, ( SETCOMPINS )
    $02 c, \ or $12 ???
    $db c, ( SET_VCOM_DESELECT_LEVEL )
    $40 c,
    $a4 c, ( RESUME_TO_RAM_CONTENT )
    $a6 c, ( NORMALDISPLAY )
    $af c, ( DISP_ON )
    ;stream

\ Reset SSD105 128x32 display
stream: dispReset
    CTRL_COMMANDS c,
    $21 c,  \ COL START_END
    $00 c,  \ start
    $7f c,  \ end
    $22 c,  \ PAGE START_END
    $00 c,  \ start
    $03 c,  \ end
    ;stream

\ main INITialization for SSD1306 128x32 OLED display
: dispInit ( -- )
    \ start the I2C interface using pin 21 and 22 on ESP32 DEVKIT V1
    \ with 21 used as sda and 22 as scl.
    21 22 wire.begin drop
    dispSetup
    dispReset
  ;

stream: dispOn      \ toggle display on
    CTRL_COMMANDS c,
    $af c, \ DISPLAYON
    ;stream

stream: dispOff     \ toggle display off
    CTRL_COMMANDS c,
    $ae c, \ DISPLAYOFF
    ;stream

stream: dispInvert  \ invert display mode
    CTRL_COMMANDS c,
    $a7 c,  \ INVERTDISPLAY
    ;stream

stream: dispNormal  \ set display mode normal
    CTRL_COMMANDS c,
    $a6 c, \ NORMALDISPLAY
    ;stream



\ stream: dispEmpty
\     CTRL_DATAS c,
\     128 allot
\     ;stream
\ 
\ ' dispEmpty >body 1+ 1+ 128 0 fill
\ ' dispEmpty >body 128 swap c!
\ ' dispEmpty >body 128 dump
\ 





\ Send code c to I2C bus
: Wire.tx ( c -- )
    >r 0 <# r> hold #>
    Wire.write drop
  ;

0 value currentPage


DEFINED? --test [if] forget --test  [then]
create --test

: setLine ( -- )
    addrSSD1306 Wire.beginTransmission
    CTRL_COMMANDS Wire.tx
    $21 Wire.tx  \ COL START_END
    $00 Wire.tx  \ start
    $7f Wire.tx  \ end
    $22 Wire.tx  \ PAGE START_END
    currentPage Wire.tx  \ start
    currentPage Wire.tx  \ end
    addrSSD1306 Wire.endTransmission drop
  ;


: lineClear ( -- )
    addrSSD1306 Wire.beginTransmission
    CTRL_DATAS Wire.tx
    DISPLAY_WIDTH
    for
        $00 Wire.tx  \ send commands or datas
    next
    addrSSD1306 Wire.endTransmission drop
  ;

: crLine ( ---)
    currentPage 1+ 3 and to currentPage
    setLine
    lineClear
  ;

: dispClear ( ---)
    0 to currentPage
    4 for
        crLine
    next
  ;

hex
create FONTS   \ 5x8
  00 c, 00 c, 00 c, 00 c, 00 c, \
  00 c, 00 c, 4f c, 00 c, 00 c, \ !
  00 c, 03 c, 00 c, 03 c, 00 c, \ "
  14 c, 3e c, 14 c, 3e c, 14 c, \ #
  24 c, 2a c, 7f c, 2a c, 12 c, \ $
  63 c, 13 c, 08 c, 64 c, 63 c, \ %
  36 c, 49 c, 55 c, 22 c, 50 c, \ &
  00 c, 00 c, 07 c, 00 c, 00 c, \ '
  00 c, 1c c, 22 c, 41 c, 00 c, \ (
  00 c, 41 c, 22 c, 1c c, 00 c, \ )
  0a c, 04 c, 1f c, 04 c, 0a c, \ *
  04 c, 04 c, 1f c, 04 c, 04 c, \ +
  50 c, 30 c, 00 c, 00 c, 00 c, \ ,
  08 c, 08 c, 08 c, 08 c, 08 c, \ -
  60 c, 60 c, 00 c, 00 c, 00 c, \ .
  00 c, 60 c, 1c c, 03 c, 00 c, \ /
  3e c, 41 c, 49 c, 41 c, 3e c, \ 0
  00 c, 02 c, 7f c, 00 c, 00 c, \ 1
  46 c, 61 c, 51 c, 49 c, 46 c, \ 2
  21 c, 49 c, 4d c, 4b c, 31 c, \ 3
  18 c, 14 c, 12 c, 7f c, 10 c, \ 4
  4f c, 49 c, 49 c, 49 c, 31 c, \ 5
  3e c, 51 c, 49 c, 49 c, 32 c, \ 6
  01 c, 01 c, 71 c, 0d c, 03 c, \ 7
  36 c, 49 c, 49 c, 49 c, 36 c, \ 8
  26 c, 49 c, 49 c, 49 c, 3e c, \ 9
  00 c, 33 c, 33 c, 00 c, 00 c, \ :
  00 c, 53 c, 33 c, 00 c, 00 c, \ ;
  00 c, 08 c, 14 c, 22 c, 41 c, \ <
  14 c, 14 c, 14 c, 14 c, 14 c, \ =
  41 c, 22 c, 14 c, 08 c, 00 c, \ >
  06 c, 01 c, 51 c, 09 c, 06 c, \ ?
  3e c, 41 c, 49 c, 15 c, 1e c, \ @
  78 c, 16 c, 11 c, 16 c, 78 c, \ A
  7f c, 49 c, 49 c, 49 c, 36 c, \ B
  3e c, 41 c, 41 c, 41 c, 22 c, \ C
  7f c, 41 c, 41 c, 41 c, 3e c, \ D
  7f c, 49 c, 49 c, 49 c, 49 c, \ E
  7f c, 09 c, 09 c, 09 c, 09 c, \ F
  3e c, 41 c, 41 c, 49 c, 7b c, \ G
  7f c, 08 c, 08 c, 08 c, 7f c, \ H
  00 c, 41 c, 7f c, 41 c, 00 c, \ I
  38 c, 40 c, 40 c, 41 c, 3f c, \ J
  7f c, 08 c, 08 c, 14 c, 63 c, \ K
  7f c, 40 c, 40 c, 40 c, 40 c, \ L
  7f c, 06 c, 18 c, 06 c, 7f c, \ M
  7f c, 06 c, 18 c, 60 c, 7f c, \ N
  3e c, 41 c, 41 c, 41 c, 3e c, \ O
  7f c, 09 c, 09 c, 09 c, 06 c, \ P
  3e c, 41 c, 51 c, 21 c, 5e c, \ Q
  7f c, 09 c, 19 c, 29 c, 46 c, \ R
  26 c, 49 c, 49 c, 49 c, 32 c, \ S
  01 c, 01 c, 7f c, 01 c, 01 c, \ T
  3f c, 40 c, 40 c, 40 c, 7f c, \ U
  0f c, 30 c, 40 c, 30 c, 0f c, \ V
  1f c, 60 c, 1c c, 60 c, 1f c, \ W
  63 c, 14 c, 08 c, 14 c, 63 c, \ X
  03 c, 04 c, 78 c, 04 c, 03 c, \ Y
  61 c, 51 c, 49 c, 45 c, 43 c, \ Z
  00 c, 7f c, 41 c, 00 c, 00 c, \ [
  00 c, 03 c, 1c c, 60 c, 00 c, \ \
  00 c, 41 c, 7f c, 00 c, 00 c, \ ]
  0c c, 02 c, 01 c, 02 c, 0c c, \ ^
  40 c, 40 c, 40 c, 40 c, 40 c, \ _
  00 c, 01 c, 02 c, 04 c, 00 c, \ `
  20 c, 54 c, 54 c, 54 c, 78 c, \ a
  7f c, 48 c, 44 c, 44 c, 38 c, \ b
  38 c, 44 c, 44 c, 44 c, 44 c, \ c
  38 c, 44 c, 44 c, 48 c, 7f c, \ d
  38 c, 54 c, 54 c, 54 c, 18 c, \ e
  08 c, 7e c, 09 c, 09 c, 00 c, \ f
  0c c, 52 c, 52 c, 54 c, 3e c, \ g
  7f c, 08 c, 04 c, 04 c, 78 c, \ h
  00 c, 00 c, 7d c, 00 c, 00 c, \ i
  00 c, 40 c, 3d c, 00 c, 00 c, \ j
  7f c, 10 c, 28 c, 44 c, 00 c, \ k
  00 c, 00 c, 3f c, 40 c, 00 c, \ l
  7c c, 04 c, 18 c, 04 c, 78 c, \ m
  7c c, 08 c, 04 c, 04 c, 78 c, \ n
  38 c, 44 c, 44 c, 44 c, 38 c, \ o
  7f c, 12 c, 11 c, 11 c, 0e c, \ p
  0e c, 11 c, 11 c, 12 c, 7f c, \ q
  00 c, 7c c, 08 c, 04 c, 04 c, \ r
  48 c, 54 c, 54 c, 54 c, 24 c, \ s
  04 c, 3e c, 44 c, 44 c, 00 c, \ t
  3c c, 40 c, 40 c, 20 c, 7c c, \ u
  1c c, 20 c, 40 c, 20 c, 1c c, \ v
  1c c, 60 c, 18 c, 60 c, 1c c, \ w
  44 c, 28 c, 10 c, 28 c, 44 c, \ x
  46 c, 28 c, 10 c, 08 c, 06 c, \ y
  44 c, 64 c, 54 c, 4c c, 44 c, \ z
  00 c, 08 c, 77 c, 41 c, 00 c, \ {
  00 c, 00 c, 7f c, 00 c, 00 c, \ |
  00 c, 41 c, 77 c, 08 c, 00 c, \ }
  10 c, 08 c, 18 c, 10 c, 08 c, \ ~
decimal
