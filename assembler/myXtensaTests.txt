\ *********************************************************************
\ Many Xtensa assembler tests
\    Filename:      myXtensaTests.txt
\    Date:          16 nov 2022
\    Updated:       18 nov 2022
\    File Version:  1.0
\    MCU:           ESP32-WROOM-32
\    Forth:         ESP32forth versions 7.0.7++
\    Copyright:     Marc PETREMANN
\    Author:        Marc PETREMANN
\    GNU General Public License
\ *********************************************************************


forth
DEFINED? code invert [IF] xtensa-assembler [THEN]

DEFINED? --test [IF] forget --test [THEN]
create --test


\ macro definitions
asm definitions
: macro:
    :
  ;

xtensa definitions

\ increment Stack Pointer
macro: sp++,
    a2 a2 4    ADDI,
  ;

\ decrement Stack Pointer
macro: sp--,
    a2 a2 -4   ADDI,
  ;

\ increment Stack Pointer and store content of ar in addr pointed by Stack Pointer
macro: arPUSH, { ar -- }
    sp++,
    ar a2 0 S32I.N,
  ;

\ ***** SP@ alias  *************************************************************

\ First example without macro
\ get Stack Pointer SP - equivalent to SP@
code mySP@1
    a1 32       ENTRY, 
    a8 a2       MOV.N,
    a2 a2 4     ADDI,
    a8 a2 0     S32I.N, 
                RETW.N, 
end-code

\ Second example with macro sp++,
\ get Stack Pointer SP - equivalent to SP@
code mySP@2
    a1 32       ENTRY, 
    a8 a2       MOV.N,
        sp++,           \ replace: a2 a2 4     ADDI,
    a8 a2 0     S32I.N, 
                RETW.N, 
end-code

\ Third example with macro arPUSH,
\ get Stack Pointer SP - equivalent to SP@
code mySP@3
    a1 32       ENTRY, 
    a8 a2       MOV.N,
    a8  arPUSH,
                RETW.N, 
end-code

mySP@3 .
\ display 1073632240
SP@3 .
\ display 1073632240


\ ***** n exp2 *****************************************************************

\ calculate n squared
code myEXP2 ( n -- nEXP2 )
    a1 32       ENTRY, 
    a8 a2 0     L32I.N, 
    a8 a8 a8    MULL,
    a8 a2 0     S32I.N, 
                RETW.N, 
end-code

3 myEXP2 .
\ display 9
101 myEXP2 .
\ display 10201




\ ***** DROP alias  ************************************************************

\ drop content on top of data stack without macro
code myDROP1 ( n -- )
    a1 32       ENTRY, 
    a2 a2 -4    ADDI,
                RETW.N, 
end-code

2 3 myDROP1 .   
\ display 2


\ drop content on top of data stack with macro sp--,
code myDROP2 ( n -- )
    a1 32       ENTRY, 
        sp--,
                RETW.N, 
end-code

2 3 myDROP2 .   
\ display 2



